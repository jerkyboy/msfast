
Original author: Yadid Ramot (e.yadid@gmail.com)

Copyright (C) 2009 MySpace.com 

This file is part of MSFast.
MSFast is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

MSFast is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with MSFast.  If not, see <http://www.gnu.org/licenses/>.

========================================================================
  Table of Contents
========================================================================

1.	Solution Items

	1.1		MySpace.MSFast.Core
	1.2		MySpace.MSFast.DataProcessors
	1.3		MySpace.MSFast.DataProcessors.CustomDataValidators
	1.4		MySpace.MSFast.Engine
	1.5		MySpace.MSFast.Engine.Console
	1.6		MySpace.MSFast.GUI.Configuration
	1.7		MySpace.MSFast.GUI.Engine
	1.8		MySpace.MSFast.SuProxy
	1.9		MySpace.MSFast.SysImpl.Win32
	1.10	MySpace.MSFast.SysImpl.Win32.InternetExplorer
	1.11	Configuration
	1.12	Resources
	1.13	COPYING
	1.14	README

2.	Compile Instructions

3.	Installing and Debugging

========================================================================

1. Solution Items

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.1	MySpace.MSFast.Core

This package contains all the Logging code, most of the configuration 
code, global exceptions and a set of HTTP parsers. These are all a part 
of the core and global functionality required by MSFast and SuProxy. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.2	MySpace.MSFast.DataProcessors

This package contains all the base functionality for collecting, 
processing and serializing of the tested page's performance data
This package also includes the performance data validation API.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.3	MySpace.MSFast.DataProcessors.CustomDataValidators

CustomDataValidators contains all the custom performance data validation 
code.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.4 MySpace.MSFast.Engine

MSFast Engine is the engine that performs the actual test of the page. 
This package launches the proxy and browser and collect flush the
performance data to the client’s hard drive

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.5	MySpace.MSFast.Engine.Console

Engine.Console is in charge of launching the MSFast Engine from the 
command line.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.6	MySpace.MSFast.GUI.Configuration

GUI.Configuration contains the user interface for MSFast’s configuration.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.7	MySpace.MSFast.GUI.Engine

GUI.Engine contains the main GUI for MSFast

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.8	MySpace.MSFast.SuProxy

This package contains the SuProxy project – a configurable proxy server 
that in charge of injecting the test javascript codes into the tested 
page, throttling the HTTP speed and capture the download traffic.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.9	MySpace.MSFast.SysImpl.Win32

This package contains all of the system-specific code required for a 
Win32 implementation of MSFast.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.10 MySpace.MSFast.SysImpl.Win32.InternetExplorer

This package contains all of the system-specific code required for a 
Win32 implementation of MSFast using Microsoft’s Internet Explorer.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.11 Configuration

This folder contains the configuration files for the proxy server and 
the configuration files for the performance data validatiors

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.12 Resources

This folder contains a managed code wrapper for SHDocVw.dll, Log4Net 
assembly, MSFast’s icon and MySpace.MSFast.GUI.Engine.RenderGraph.bin 
which is an SWF file used to display the render results graph of the 
tested page.

This folder also contains Install.bat – a utility for creating an 
REG file that holds all the registry keys required by MSFast

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.13 COPYING

GPL Copyright file

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.14 README

This is it!

========================================================================

2. Compile Instructions

The source package contains a solution file for Microsoft's Visual 
Studio 2008 (MSFast.sln). MSFast uses .net framework version 2 and the 
solution file is ready to be compiled (no additional configuration or 
projects required)

========================================================================

3. Installing and Debugging

After you compiled the code using Microsoft's Visual Studio 2008, a new 
BIN folder is created at the base of your solution folder. 

Browse to - "$(SolutionDir)\Bin\$(ConfigurationName)\" 
(for example - C:\<msfast solution>\Bin\Debug\)
and register the "MySpace.MSFast.SysImpl.Win32.InternetExplorer.dll" 
assembly using RegAsm:

RegAsm.exe "MySpace.MSFast.SysImpl.Win32.InternetExplorer.dll" /register /codebase

IMPORTANT - you would also need to run \Resources\Install.bat to register the toolbar on 
			Internet Explorer!
			Use:
			Install.bat "$(SolutionDir)\Bin\$(ConfigurationName)\" "(TEMPFOLDER)"
			For example:
			Install.bat "C:\<msfast solution>\Bin\Debug\" "C:\TEMP\"

When you launches Internet Explorer, you should see the compiled version 
of the toolbar. To debug the code, you would need to attach to 
iexplore.exe (IE’s process) When you test a page, MSFast’s Engine – 
the code that we use to test the page- is launched as a separate 
process – “engine.exe” 

========================================================================


