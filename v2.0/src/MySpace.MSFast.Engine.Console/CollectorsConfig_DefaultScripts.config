<?xml version="1.0" encoding="utf-8" ?>
<config>
  <collectorsgroups>
    <collectorsgroup groupid="0">
      <collector name="Start_Download_Tracking_Using_Proxy">
        <onStartingTest>
          <![CDATA[
            try{
				      var getXMLHttpRequest = function(){
				        if( typeof XMLHttpRequest == "undefined" ){
					        try { return new ActiveXObject("Msxml2.XMLHTTP.6.0") } catch(e) {}
					        try { return new ActiveXObject("Msxml2.XMLHTTP.3.0") } catch(e) {}
					        try { return new ActiveXObject("Msxml2.XMLHTTP") } catch(e) {}
					        try { return new ActiveXObject("Microsoft.XMLHTTP") } catch(e) {}
				        }else{
				          return new XMLHttpRequest();
				        }
				      }
              
				      var client = getXMLHttpRequest();
				      client.open("GET", "/?START_TRACKING=" + $pdc.testId + "~" + $pdc.requestEncodedUrl + "~" + $pdc.nextEncodedURL, false);
				      client.send();
            }catch(e){
            }
    		  ]]>
        </onStartingTest>
      </collector>
      <collector name="Stop_Download_Tracking_Using_Proxy">
        <isFinished>
          <![CDATA[
  				  return window["istriggered_stop_tracker"]; 
          ]]>
        </isFinished>
        <onInit>
          <![CDATA[
  				  window["istriggered_stop_tracker"] = false; 
          ]]>
        </onInit>
        <onEndDocument>
          <![CDATA[
            setTimeout(function(){
              try{
                var getXMLHttpRequest = function(){
                  if( typeof XMLHttpRequest == "undefined" ){
                    try { return new ActiveXObject("Msxml2.XMLHTTP.6.0") } catch(e) {}
                    try { return new ActiveXObject("Msxml2.XMLHTTP.3.0") } catch(e) {}
                    try { return new ActiveXObject("Msxml2.XMLHTTP") } catch(e) {}
                    try { return new ActiveXObject("Microsoft.XMLHTTP") } catch(e) {}
                  }else{
                    return new XMLHttpRequest();
                  }
                }
                var client = getXMLHttpRequest();
                client.open("GET", "/?STOP_TRACKING=" + $pdc.testId + "~" + $pdc.requestEncodedUrl + "~aHR0cDovL21zZmFzdC5jb20=", false);
                client.send();
              }catch(e){                
              }
              window["istriggered_stop_tracker"] = true;
            },10000);
          ]]>
        </onEndDocument>
      </collector>
      <collector name="Start_Browser_Performance_Tracking">
        <onLoadingFirstCollectionPage>
          <![CDATA[
            window.external.ExecuteJs("startperftest","");
          ]]>
        </onLoadingFirstCollectionPage>
      </collector>
      <collector name="Stop_Browser_Performance_Tracking">
        <onInit>
          <![CDATA[
  				  window["istriggered_stop_performance_tracker"] = false; 
          ]]>
        </onInit>
        <isFinished>
          <![CDATA[
  				  return window["istriggered_stop_performance_tracker"]; 
          ]]>
        </isFinished>
        <onEndDocument>
          <![CDATA[
            setTimeout(function(){
              try{
				        window.external.ExecuteJs("endperftest","perfdump_" + $pdc.testId + ".dat");
              }catch(e){                
              }
              window["istriggered_stop_performance_tracker"] = true;
            },10000);                
		      ]]>
        </onEndDocument>
      </collector>
      <collector name="Clear_Browser_Cache">
        <onLoadingFirstCollectionPage>
          <![CDATA[
            window.external.ExecuteJs("clearcache", "");
          ]]>
        </onLoadingFirstCollectionPage>
        <onEndDocument>
          <![CDATA[
            window.external.ExecuteJs("clearcache", "");
          ]]>
        </onEndDocument>
      </collector>
      <collector name="Track_Page_Render_Segments">
        <onInit>
          <![CDATA[     
          window["istriggered_stop_track_page_render_segments"] = false; 
          window["_collectedRenderData"] = "";
          window["markRenderTest"] = function(_t){ window["_collectedRenderData"] += ((_t) ? _t  : "") + ":" + ((new Date()/1000)*1000) + ";"; }        
        ]]>
        </onInit>
        <onReadyState>
          <![CDATA[ 
            var s = e.state;
            if(s == "0"){	      window["markRenderTest"]("ReadyStateUninitialized");
            }else if(s == "1"){	window["markRenderTest"]("ReadyStateLoading");
            }else if(s == "2"){	window["markRenderTest"]("ReadyStateLoaded");
            }else if(s == "3"){ window["markRenderTest"]("ReadyStateInteractive");
            }else if(s == "4"){	window["markRenderTest"]("ReadyStateComplete"); 
            }else{              window["markRenderTest"]("ReadyState(" + s + ")"); }
          ]]>
        </onReadyState>
        <isFinished>
          <![CDATA[
  				  return window["istriggered_stop_track_page_render_segments"]; 
          ]]>
        </isFinished>
        <onEndHead>
          <![CDATA[ 
            window["markRenderTest"]("onEndHead");
          ]]>
        </onEndHead>
        <onStartBody>
          <![CDATA[ 
            window["markRenderTest"]("onStartBody");
          ]]>
        </onStartBody>
        <onSegment>
          <![CDATA[
            window["markRenderTest"]("onSegment(" + e.segmentId +")");
          ]]>
        </onSegment>
        <onEndBody>
          <![CDATA[
            window["markRenderTest"]("onEndBody");
          ]]>
        </onEndBody>
        <onEndHtml>
          <![CDATA[
            window["markRenderTest"]("onEndHtml");
          ]]>
        </onEndHtml>
        <onEndDocument>
          <![CDATA[ 
            markRenderTest("onEndDocument");
            setTimeout(function(){
              try{
				        window.external.ExecuteJs("saveData", window["_collectedRenderData"]);
              }catch(e){                
              }
              window["istriggered_stop_track_page_render_segments"] = true;
            },5000);            
          ]]>
        </onEndDocument>
      </collector>
      <collector name="Progress_Tracker_Render">
        <onSegment><![CDATA[try{window.external.ExecuteJs("onProgress", "0;" + e.segmentId + ";" + $pdc.breaks);}catch(e){}]]></onSegment>
      </collector>
    </collectorsgroup>
    <collectorsgroup groupid="1">
      <collector name="Screenshots_Small">
        <onSegment><![CDATA[try{window.external.ExecuteJs("getSnapshot", ((e && e.segmentId) ? e.segmentId : "x" + Math.round(Math.random()*100000) + "x") + "~248~183~0");}catch(e){}]]></onSegment>
      </collector>
      <collector name="Progress_Tracker_Screenshots">
        <onSegment><![CDATA[try{window.external.ExecuteJs("onProgress", "1;" + e.segmentId + ";" + $pdc.breaks);}catch(e){}]]></onSegment>
      </collector>
    </collectorsgroup>
  </collectorsgroups>
</config>
